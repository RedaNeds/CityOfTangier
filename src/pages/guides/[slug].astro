---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { client } from '../../lib/sanity';
import SanityContent from '../../components/SanityContent.astro';

export async function getStaticPaths() {
  try {
    const guides = await client.fetch(`
      *[_type == "guide"] {
        "slug": slug.current
      }
    `);
    
    return guides.map((guide) => ({
      params: { slug: guide.slug },
      props: { slug: guide.slug },
    }));
  } catch (error) {
    console.error('Error in getStaticPaths:', error);
    return [];
  }
}

const { slug } = Astro.props;

// Get the specific guide from Sanity
const guide = await client.fetch(`
  *[_type == "guide" && slug.current == $slug][0] {
    _id,
    title,
    slug,
    description,
    excerpt,
    content,
    category,
    difficulty,
    estimatedReadTime,
    featuredImage,
    author,
    tags,
    relatedPlaces,
    relatedItineraries,
    _createdAt,
    updatedAt
  }
`, { slug });

// Get related guides
const relatedGuides = await client.fetch(`
  *[_type == "guide" && slug.current != $slug && category == $category] | order(_createdAt desc) [0...3] {
    _id,
    title,
    slug,
    excerpt,
    category,
    difficulty,
    estimatedReadTime,
    featuredImage
  }
`, { slug, category: guide.category });

const difficultyColors = {
  beginner: 'bg-green-100 text-green-800',
  intermediate: 'bg-yellow-100 text-yellow-800',
  advanced: 'bg-red-100 text-red-800'
};

const categoryInfo = {
  'travel-tips': { name: 'Travel Tips', icon: '‚úàÔ∏è' },
  'culture-history': { name: 'Culture & History', icon: 'üèõÔ∏è' },
  'food-drink': { name: 'Food & Drink', icon: 'üçΩÔ∏è' },
  'transportation': { name: 'Transportation', icon: 'üöå' },
  'accommodation': { name: 'Accommodation', icon: 'üè®' },
  'shopping': { name: 'Shopping', icon: 'üõçÔ∏è' },
  'safety': { name: 'Safety', icon: 'üõ°Ô∏è' },
  'language': { name: 'Language', icon: 'üó£Ô∏è' },
  'other': { name: 'Other', icon: 'üìö' }
};
---

{guide && guide.title ? (
  <BaseLayout 
    title={guide.title}
    description={guide.excerpt || guide.description}
  >
    <div class="max-w-4xl mx-auto px-4 py-8">
      <!-- Hero Section -->
      <div class="mb-8">
        {guide.featuredImage && (
          <div class="mb-6">
            <img 
              src={guide.featuredImage} 
              alt={guide.title}
              class="w-full h-64 md:h-96 object-cover rounded-2xl"
            />
          </div>
        )}
        
        <div class="flex flex-col md:flex-row md:items-center md:justify-between mb-6">
          <div>
            <h1 class="text-4xl font-serif font-bold text-gray-900 mb-2">{guide.title}</h1>
            <p class="text-xl text-gray-600">{guide.description}</p>
          </div>
          
          <div class="flex items-center gap-4 mt-4 md:mt-0">
            <div class="text-right">
              <div class="text-sm text-gray-500">Read Time</div>
              <div class="text-lg font-semibold text-gray-700">
                {guide.estimatedReadTime || 5} minutes
              </div>
            </div>
          </div>
        </div>
        
        <div class="flex flex-wrap gap-3 mb-6">
          <span class={`px-3 py-1 rounded-full text-sm font-medium ${difficultyColors[guide.difficulty] || difficultyColors.beginner}`}>
            {guide.difficulty || 'beginner'}
          </span>
          <span class="bg-teal-100 text-teal-800 px-3 py-1 rounded-full text-sm font-medium">
            {categoryInfo[guide.category]?.name || 'Guide'}
          </span>
          {guide.tags?.map(tag => (
            <span class="bg-gray-100 text-gray-700 px-3 py-1 rounded-full text-sm">
              {tag}
            </span>
          ))}
        </div>
      </div>

      <!-- Main Content -->
      <div class="grid grid-cols-1 md:grid-cols-4 gap-8">
        <!-- Content -->
        <div class="md:col-span-3">
          <SanityContent content={guide.content} />
        </div>
        
        <!-- Sidebar -->
        <div class="space-y-6">
          <!-- Author Info -->
          {guide.author && (
            <div class="bg-white border border-gray-200 rounded-2xl p-6">
              <h3 class="font-semibold text-gray-900 mb-4 flex items-center">
                <span class="mr-2">‚úçÔ∏è</span>
                About the Author
              </h3>
              
              <div class="flex items-start space-x-3">
                {guide.author.avatar && (
                  <img 
                    src={guide.author.avatar} 
                    alt={guide.author.name}
                    class="w-12 h-12 rounded-full object-cover"
                  />
                )}
                <div>
                  <div class="font-medium text-gray-900">{guide.author.name}</div>
                  {guide.author.bio && (
                    <div class="text-sm text-gray-600 mt-1">{guide.author.bio}</div>
                  )}
                </div>
              </div>
            </div>
          )}
          
          <!-- Guide Info -->
          <div class="bg-white border border-gray-200 rounded-2xl p-6">
            <h3 class="font-semibold text-gray-900 mb-4 flex items-center">
              <span class="mr-2">üìä</span>
              Guide Info
            </h3>
            
            <div class="space-y-3">
              <div class="flex justify-between">
                <span class="text-sm text-gray-500">Category</span>
                <span class="text-sm font-medium">{categoryInfo[guide.category]?.name || 'Guide'}</span>
              </div>
              <div class="flex justify-between">
                <span class="text-sm text-gray-500">Difficulty</span>
                <span class="text-sm font-medium capitalize">{guide.difficulty || 'beginner'}</span>
              </div>
              <div class="flex justify-between">
                <span class="text-sm text-gray-500">Read Time</span>
                <span class="text-sm font-medium">{guide.estimatedReadTime || 5} min</span>
              </div>
              <div class="flex justify-between">
                <span class="text-sm text-gray-500">Published</span>
                <span class="text-sm font-medium">
                  {new Date(guide._createdAt).toLocaleDateString('en-US', { 
                    month: 'short',
                    day: 'numeric',
                    year: 'numeric'
                  })}
                </span>
              </div>
              {guide.updatedAt && (
                <div class="flex justify-between">
                  <span class="text-sm text-gray-500">Updated</span>
                  <span class="text-sm font-medium">
                    {new Date(guide.updatedAt).toLocaleDateString('en-US', { 
                      month: 'short',
                      day: 'numeric',
                      year: 'numeric'
                    })}
                  </span>
                </div>
              )}
            </div>
          </div>
          
          <!-- Action Buttons -->
          <div class="space-y-3">
            <button 
              onclick="window.print()"
              class="w-full bg-teal-600 text-white px-6 py-3 rounded-xl font-semibold hover:bg-teal-700 transition-colors"
            >
              üñ®Ô∏è Print Guide
            </button>
            
            <button 
              onclick="navigator.share ? navigator.share({title: guide.title, text: guide.description, url: window.location.href}) : navigator.clipboard.writeText(window.location.href)"
              class="w-full bg-gray-600 text-white px-6 py-3 rounded-xl font-semibold hover:bg-gray-700 transition-colors"
            >
              üì§ Share Guide
            </button>
          </div>
        </div>
      </div>

      <!-- Related Content -->
      {(guide.relatedPlaces?.length > 0 || guide.relatedItineraries?.length > 0) && (
        <div class="mt-12">
          <h2 class="text-2xl font-bold text-gray-900 mb-6">Related Content</h2>
          
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            {guide.relatedPlaces?.length > 0 && (
              <div class="bg-gray-50 rounded-2xl p-6">
                <h3 class="text-lg font-semibold text-gray-900 mb-4">Related Places</h3>
                <div class="space-y-3">
                  {guide.relatedPlaces.slice(0, 3).map(place => (
                    <a 
                      href={`/places/see-do/${place.slug.current}`}
                      class="block p-3 bg-white rounded-lg hover:shadow-md transition-all"
                    >
                      <div class="font-medium text-gray-900">{place.title}</div>
                      <div class="text-sm text-gray-600">{place.description}</div>
                    </a>
                  ))}
                </div>
              </div>
            )}
            
            {guide.relatedItineraries?.length > 0 && (
              <div class="bg-gray-50 rounded-2xl p-6">
                <h3 class="text-lg font-semibold text-gray-900 mb-4">Related Itineraries</h3>
                <div class="space-y-3">
                  {guide.relatedItineraries.slice(0, 3).map(itinerary => (
                    <a 
                      href={`/itineraries/${itinerary.slug.current}`}
                      class="block p-3 bg-white rounded-lg hover:shadow-md transition-all"
                    >
                      <div class="font-medium text-gray-900">{itinerary.title}</div>
                      <div class="text-sm text-gray-600">{itinerary.description}</div>
                    </a>
                  ))}
                </div>
              </div>
            )}
          </div>
        </div>
      )}

      <!-- Related Guides -->
      {relatedGuides && relatedGuides.length > 0 && (
        <div class="mt-12 bg-gray-50 rounded-2xl p-6">
          <h2 class="text-2xl font-bold text-gray-900 mb-4">More {categoryInfo[guide.category]?.name || 'Guides'}</h2>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            {relatedGuides.map(relatedGuide => (
              <a 
                href={`/guides/${relatedGuide.slug.current}`}
                class="bg-white rounded-xl p-4 hover:shadow-md transition-all"
              >
                <h3 class="font-semibold text-gray-900 mb-2">{relatedGuide.title}</h3>
                <p class="text-gray-600 text-sm line-clamp-2 mb-2">{relatedGuide.excerpt}</p>
                <div class="flex items-center justify-between text-sm text-gray-500">
                  <span class={`px-2 py-1 rounded-full text-xs font-medium ${difficultyColors[relatedGuide.difficulty] || difficultyColors.beginner}`}>
                    {relatedGuide.difficulty || 'beginner'}
                  </span>
                  <span>{relatedGuide.estimatedReadTime || 5} min read</span>
                </div>
              </a>
            ))}
          </div>
        </div>
      )}
      
      <!-- Back to Guides -->
      <div class="mt-12 pt-8 border-t border-gray-200">
        <a href="/guides" class="text-teal-600 hover:text-teal-800 font-medium">
          ‚Üê Back to Travel Guides
        </a>
      </div>
    </div>
  </BaseLayout>
) : (
  <BaseLayout title="Guide Not Found">
    <div class="max-w-4xl mx-auto px-4 py-16 text-center">
      <h1 class="text-4xl font-bold text-gray-900 mb-4">Guide Not Found</h1>
      <p class="text-xl text-gray-600 mb-8">The guide you're looking for doesn't exist or has been removed.</p>
      <a href="/guides" class="bg-teal-600 text-white px-6 py-3 rounded-xl font-semibold hover:bg-teal-700 transition-colors">
        View All Guides
      </a>
    </div>
  </BaseLayout>
)}

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
